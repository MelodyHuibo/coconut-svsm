name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install rust toolchain
        run: rustup toolchain install --profile minimal

      - name: Add rust components
        run: rustup component add rustfmt rust-src clippy

      - name: Check that Cargo.lock is up to date.
        run: cargo update --workspace --locked

      - name: Install TPM 2.0 Reference Implementation build dependencies
        run: sudo apt install -y autoconf autoconf-archive pkg-config build-essential automake

      # ubuntu-latest does not have binutils 2.39, which we need for
      # ld to work, so build all the objects without performing the
      # final linking step.
      - name: Build
        run: make FEATURES="default,enable-gdb" STAGE1_RUSTC_ARGS="--emit=obj -C linker=/usr/bin/true" stage1_elf_full stage1_elf_trampoline

      - name: Run tests
        run: make test

      - name: Format
        run: cargo fmt --all -- --check

      - name: Clippy on no_std x86_64-unknown-none
        run: cargo clippy --all-features --package svsm --target=x86_64-unknown-none -- -D warnings

      - name: Clippy on std x86_64-unknown-linux-gnu
        run: cargo clippy --all-features --workspace --exclude svsm --exclude stage1 --exclude svsm-fuzz -- -D warnings

      - name: Clippy on stage1
        run: cargo clippy --all-features --package stage1 --target=x86_64-unknown-none -- -D warnings -C panic=abort

      - name: Clippy on svsm-fuzz
        run: cargo clippy --all-features --package svsm-fuzz -- -D warnings
        env:
          RUSTFLAGS: --cfg fuzzing

      - name: Clippy on tests
        run: cargo clippy --all-features --workspace --tests --exclude packit -- -D warnings

      - name: Check documentation
        run: make doc
        env:
          RUSTDOCFLAGS: -D warnings

  nightly-check:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install latest nightly
        run: rustup toolchain install nightly -t x86_64-unknown-none --profile minimal --force -c rustfmt

      # release/src/git_version.rs is auto-generated via a build.rs file. Touch
      # it here to avoid CI failures.
      - name: Touch release/src/git_version.rs
        run: echo "" > release/src/git_version.rs

      - name: Format doctests
        run: cargo +nightly fmt --all -- --check --config "format_code_in_doc_comments=true"
